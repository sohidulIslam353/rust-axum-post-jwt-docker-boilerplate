version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: axum_app
    volumes:
      - ./src:/usr/src/app/src
      - ./Cargo.toml:/usr/src/app/Cargo.toml
      - ./Cargo.lock:/usr/src/app/Cargo.lock
      - ./.env:/usr/src/app/.env
    ports:
      - "8080:8080"
    depends_on:
      - db
      - keydb
      - rabbitmq
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/axum_db
      REDIS_URL: "redis://:password@keydb:6379/"
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:${RABBITMQ_PORT}/%2f

  # database (Postgresql)
  db:
    image: postgres:15
    container_name: axum_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: axum_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  migration:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: axum_migration
    volumes:
      - ./migration:/usr/src/app/migration
      - ./Cargo.toml:/usr/src/app/Cargo.toml
      - ./Cargo.lock:/usr/src/app/Cargo.lock
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/axum_db
    command: sh -c "sea-orm-cli migrate up --migration-dir ./migration"

  # keydb (Caching management)
  keydb:
    image: eqalpha/keydb:latest
    container_name: axum_keydb
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - keydb_data:/data
    environment:
      - KEYDB_PASSWORD=password

  # rabbitmq (play with events)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: axum_rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "${RABBITMQ_PORT}:5672" # RabbitMQ service
      - "${RABBITMQ_MANAGEMENT_PORT}:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # All workers loaded
  email_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./src:/usr/src/app/src
      - ./Cargo.toml:/usr/src/app/Cargo.toml
      - ./Cargo.lock:/usr/src/app/Cargo.lock
      - ./.env:/usr/src/app/.env
    command: cargo run --bin email_worker
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_PORT=${MAIL_PORT}

volumes:
  db_data:
  keydb_data:
  rabbitmq_data:
