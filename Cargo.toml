[package]
name = "axum_seaorm_app"
version = "0.1.0"
edition = "2024"
default-run = "axum_seaorm_app"

[dependencies]
# Web framework
axum = "0.7"
axum-server = "0.6"

# Async runtime
tokio = { version = "1", features = ["full"] }

# JWT
jsonwebtoken = "9"

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# Database ORM
sea-orm = { version = "0.11", features = ["sqlx-postgres", "runtime-tokio-native-tls"] }

# Low level SQL (used internally by SeaORM or for custom queries)
sqlx = { version = "0.7", features = ["runtime-tokio-native-tls", "postgres"] }

# Environment variables loader
dotenvy = "0.15"

# Date/Time
chrono = { version = "0.4", features = ["serde"] } 

# Redis / KeyDB
redis = { version = "0.24", features = ["tokio-comp"] }

# Static singletons (useful for global cache, db pool etc.)
once_cell = "1.18"

argon2 = "0.5"
uuid = { version = "1", features = ["v4"] }
bcrypt = "0.15" 
validator = { version = "0.16", features = ["derive"] }

tracing = "0.1"
tracing-log = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-appender = "0.2"

anyhow = "1.0.99"
lettre = { version = "0.11", features = ["builder", "tokio1-native-tls"] }
# RabbitMQ client for Rust
lapin = "2"
futures-util = "0.3"
thiserror = "1.0"



